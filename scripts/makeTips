<?php

include 'vendor/autoload.php';

use samdark\sitemap\Sitemap;
use samdark\sitemap\Index;

// create sitemap
$sitemap = new Sitemap('./sitemap.xml');

const LEVEL_UNDERLINE = '-';

if (!file_exists('tips')) {
	mkdir('tips', 0755);
}

fopen("build.log", "w+");

$phptips = array();

$phptips[] = "PHP tips and tricks";
$phptips[] = "-------------------";
$phptips[] = "";

$files = glob('docs/*.json');
$files = array_diff($files, ['docs/skeleton.json']);

$images = glob('images/*.png');

$f = array_map(function ($file) { return substr($file, 5, -5);}, $files);
$i = array_map(function ($image) { return substr($image, 7, -4);}, $images);
if ($diff = array_diff($f, $i)) {
	print "Missing files in images : ".implode(', ', $diff)."\n";
}
if ($diff = array_diff($i, $f)) {
	print "Missing files in docs : ".implode(', ', $diff)."\n";
}

$stats = array('author' => 0,
				);
$errors = 0;
$tips = array();
$anchors = array();
$images = array();
foreach($files as $file) {
	$tip = json_decode(file_get_contents($file));

	if ($tip === null) {
		buildlog("Warning : $file is not valid JSON");
		++$errors;
		continue;
	}

	if (isset($tips[$tip->date])) {
		buildlog("Warning : $tip->date is already set in $file");;
		++$errors;
		continue;
	}
	$tips[$tip->date] = $tip;
	
	if (!isset($tips[$tip->date])) {
		buildlog("Warning : $file has no image entry");;
		++$errors;
	}

	if (isset($images[$tip->image])) {
		buildlog("Warning : $tip->image is already in used in {$images[$tip->image]}");;
		++$errors;
		continue;
	} else {
		$images[$tip->image] = $file;
	}

	if (substr_count($tip->title, '_') > 1 && 
		!preg_match('/(file_put_contents|array_intersect_uassoc_insensitive|file_append_contents)/', $tip->title)) {
		buildlog("Warning : Too many _ in title '$tip->title' in $file");;
		++$errors;
		continue;
	}

	if (ucwords(strtolower($tip->title)) != $tip->title &&
		!preg_match('/(URL|array|strict_types|stdClass|foreach|PHP|ReturnTypeWillChange|strpos|readonly|DTO|VO|null|is_a|instanceof|file_put_contents|try|finally|catch|file_append_contents|glob)/', $tip->title)) {
		buildlog("Warning : Not First Upper Cased in $file");;
		++$errors;
	}

	if (strlen($tip->title) > 50) {
		buildlog("Warning : $tip->title is too long (".strlen($tip->title).") in $file");;
		++$errors;
		continue;
	}
	
	$tip->content = str_replace('#PHP', 'PHP', $tip->content);

	$tips[$tip->date] = $tip;
}

krsort($tips);

$tags = array();
$tiplist = array();

foreach($tips as $tip) {
	$phptip = array();
	$name = str_replace('.png', '', $tip->image);
	
	if ($e = check($tip, 'docs/'.str_replace('.json', '.png', $tip->image))) {
		print "Error in file $file : $e\n";
		++$errors;
		continue;
	}
	
	$phptip[] = '.. _'.make_anchor($tip->title).':'.PHP_EOL;
	if (isset($anchors[make_anchor($tip->title)])) {
		buildlog("Duplicate entry for $tip->title in $file");;
	}
	$anchors[make_anchor($tip->title)] = 1;
	$phptip[] = $tip->title;
	$phptip[] = str_repeat(LEVEL_UNDERLINE, strlen($tip->title));
	$phptip[] = '';
	
	$phptip[] = '	.. meta::';
	$phptip[] = '		:description lang=en:';
	$first = preg_split('/[\.\?;]/', $tip->content)[0];
	$phptip[] = '			'.$tip->title.': '.$first.'.';
	$phptip[] = '';

	if (!empty($tip->author)) {
		$author = '`'.$tip->author.' <'.$tip->contact.'>`_';
		$phptip[] = 'By '.$author.PHP_EOL;
		$authors[$author][] = '    * :ref:`'.make_anchor($tip->title).'`';
	}
	
	$phptip[] = str_replace("\n", "\n\n", $tip->content);
	$phptip[] = '';
	$phptip[] = ".. image:: ../images/".$tip->image;
	
	if (!empty($tip->seeAlso)) {
		$phptip[] = '';
		foreach($tip->seeAlso as $title => $link) {
			$phptip[] = '* `'.$title.' <'.$link.'>`_';
		}
		$phptip[] = '';
	}

	$phptip[] = PHP_EOL;
	
	foreach(array_filter($tip->tags) as $tag) {
		if (!isset($tags[$tag])) {
			$tags[$tag] = array();
		}
		$tags[$tag][] = $name;
	}
	
	$file = str_replace('.png', '.rst', $tip->image);
	file_put_contents('tips/'.$file, implode(PHP_EOL, $phptip));

	$sitemap->addItem('https://php-tips.readthedocs.io/en/latest/tips/'.substr($file, 0, -4).'.html');

	$tiplist[] = '   tips/'.$file;
}

$sitemap->write();

$index = file_get_contents('tipSection.rst.in');
$index = str_replace('   tips', implode(PHP_EOL, $tiplist), $index);
file_put_contents('tipSection.rst', $index);

//file_put_contents('tips.rst', implode(PHP_EOL, $phptips));
print "processed ".count($files)." file with $errors error\n";

uasort($tags, function ($a, $b) { return count($a) <=> count($b);});
//print_r($tags);

if (!empty($authors)) {
	$authorRst = <<<RST
Author index
------------


RST;
	
	ksort($authors);
	foreach($authors as $name => $list) {
		$authorRst .= "* $name\n";
		$authorRst .= implode(PHP_EOL, $list).PHP_EOL;
		++$stats['author'];
	}
	file_put_contents('authorindex.rst', $authorRst);
	print "processed ".$stats['author']." authors\n";
}

function check(stdClass $tip, string $file) : string {
	if (!isset($tip->date)) {
		print "Missing date in $file\n";
	}

	if (empty($tip->title)) {
		print "Empty title in $file\n";
	}

	return '';
}

function make_anchor(string $title) : string {
	$title = strtr(strtolower($title), ' ', '-');
	return $title;
}

function buildlog($message) {
	static $log;
	
	if (empty($log)) {
		$log = fopen("build.log", "w+");
	}
	
	fwrite($log, $message.PHP_EOL);
}

?>